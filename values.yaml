# This file is autogenerated by katenary
#
# DO NOT EDIT IT BY HAND UNLESS YOU KNOW WHAT YOU ARE DOING
#
# If you want to change the content of this file, you should edit the
# compose file and run katenary again.
# If you need to override some values, you can do it in a override file
# and use the -f flag to specify it when running the helm command.



# db configuration
db:
  # key: db.repository
  repository:
    # key: db.repository.image
    image: mariadb
    # key: db.repository.tag
    tag: "10.10"
  # key: db.persistence
  persistence:
    # key: db.persistence.dbdata
    dbdata:
      # Storage class to use for PVCs
      # storageClass: "-" means use default
      # storageClass: "" means do not specify
      # storageClass: "foo" means use that storageClass
      # key: db.persistence.dbdata.storageClass
      storageClass: '-'
      # key: db.persistence.dbdata.size
      size: 1Gi
      # key: db.persistence.dbdata.accessMode
      accessMode:
        - ReadWriteOnce
      # key: db.persistence.dbdata.enabled
      enabled: true
  # key: db.environment
  environment:
    # key: db.environment.MYSQL_PASSWORD
    MYSQL_PASSWORD: mosparo_password #! change this
    # key: db.environment.MYSQL_ROOT_PASSWORD
    MYSQL_ROOT_PASSWORD: mosparo_root_pw #! change this
  # key: db.replicas
  replicas: 1
  # key: db.nodeSelector
  nodeSelector: {}
  # Resources allows you to specify the resource requests and limits for a service.
  # Resources are used to specify the amount of CPU and memory that 
  # a container needs.
  #
  # e.g.
  # resources:
  #   requests:
  #     memory: "64Mi"
  #     cpu: "250m"
  #   limits:
  #     memory: "128Mi"
  #     cpu: "500m"
  # key: db.resources
  resources: {}
  # imagePullPolicy allows you to specify a policy to cache or always pull an image.
  # You must provide a string value with one of the following values:
  # - Always       -> will always pull the image
  # - Never        -> will never pull the image, the image should be present on the node
  # - IfNotPresent -> will pull the image only if it is not present on the node
  # key: db.imagePullPolicy
  imagePullPolicy: IfNotPresent
  # key: db.serviceAccount
  serviceAccount: ""
  # enable rollout of network policy to restrict db access to pods of this application (recommended)
  # (needs support of cni provider)
  # key: db.networkPolicy
  networkPolicy:
    enabled: true

# mosparocron configuration
mosparocron:
  # key: mosparocron.repository
  repository:
    # key: mosparocron.repository.image
    image: mosparo/mosparo
    # key: mosparocron.repository.tag
    tag: latest
  # key: mosparocron.persistence
  persistence:
    # key: mosparocron.persistence.mosparodata
    mosparodata:
      # Storage class to use for PVCs
      # storageClass: "-" means use default
      # storageClass: "" means do not specify
      # storageClass: "foo" means use that storageClass
      # key: mosparocron.persistence.mosparodata.storageClass
      # storageClass: '-'
      # key: mosparocron.persistence.mosparodata.size
      # size: 1Gi
      # key: mosparocron.persistence.mosparodata.accessMode
      # accessMode:
        # - ReadWriteMany
      # key: mosparocron.persistence.mosparodata.enabled
      enabled: true
  # key: mosparocron.replicas
  replicas: 1
  # key: mosparocron.nodeSelector
  nodeSelector: {}
  # Resources allows you to specify the resource requests and limits for a service.
  # Resources are used to specify the amount of CPU and memory that 
  # a container needs.
  #
  # e.g.
  # resources:
  #   requests:
  #     memory: "64Mi"
  #     cpu: "250m"
  #   limits:
  #     memory: "128Mi"
  #     cpu: "500m"
  # key: mosparocron.resources
  resources: {}
  # imagePullPolicy allows you to specify a policy to cache or always pull an image.
  # You must provide a string value with one of the following values:
  # - Always       -> will always pull the image
  # - Never        -> will never pull the image, the image should be present on the node
  # - IfNotPresent -> will pull the image only if it is not present on the node
  # key: mosparocron.imagePullPolicy
  imagePullPolicy: Always
  # key: mosparocron.serviceAccount
  serviceAccount: ""

# mosparoweb configuration
mosparoweb:
  # key: mosparoweb.repository
  repository:
    # key: mosparoweb.repository.image
    image: mosparo/mosparo
    # key: mosparoweb.repository.tag
    tag: latest
  # key: mosparoweb.persistence
  persistence:
    # key: mosparoweb.persistence.mosparodata
    mosparodata:
      # Storage class to use for PVCs
      # storageClass: "-" means use default
      # storageClass: "" means do not specify
      # storageClass: "foo" means use that storageClass
      # key: mosparoweb.persistence.mosparodata.storageClass
      storageClass: '-'
      # key: mosparoweb.persistence.mosparodata.size
      size: 1Gi
      # key: mosparoweb.persistence.mosparodata.accessMode
      accessMode:
        - ReadWriteMany
      # key: mosparoweb.persistence.mosparodata.enabled
      enabled: true
  # Default value for ingress.class annotation
  # class: "-"
  # If the value is "-", controller will not set ingressClassName
  # If the value is "", Ingress will be set to an empty string, so
  # controller will use the default value for ingressClass
  # If the value is specified, controller will set the named class e.g. "nginx"
  # key: mosparoweb.ingress
  ingress:
    # key: mosparoweb.ingress.annotations
    annotations: {}
    # key: mosparoweb.ingress.host
    host: #! your alias
    # key: mosparoweb.ingress.path
    path: /
    # key: mosparoweb.ingress.class
    class: '-'
    # key: mosparoweb.ingress.enabled
    enabled: true
  # key: mosparoweb.replicas
  replicas: 1
  # key: mosparoweb.nodeSelector
  nodeSelector: {}
  # Resources allows you to specify the resource requests and limits for a service.
  # Resources are used to specify the amount of CPU and memory that 
  # a container needs.
  #
  # e.g.
  # resources:
  #   requests:
  #     memory: "64Mi"
  #     cpu: "250m"
  #   limits:
  #     memory: "128Mi"
  #     cpu: "500m"
  # key: mosparoweb.resources
  resources: {}
  # imagePullPolicy allows you to specify a policy to cache or always pull an image.
  # You must provide a string value with one of the following values:
  # - Always       -> will always pull the image
  # - Never        -> will never pull the image, the image should be present on the node
  # - IfNotPresent -> will pull the image only if it is not present on the node
  # key: mosparoweb.imagePullPolicy
  imagePullPolicy: Always
  # key: mosparoweb.serviceAccount
  serviceAccount: ""

# imagePullSecrets allows you to specify a name of an image pull secret.
# You must provide a list of object with the name field set to the name of the
# e.g.
# pullSecrets:
# - name: regcred
# You are, for now, repsonsible for creating the secret.
pullSecrets: []

# vim: ft=yaml
